{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/Documents/Personal/Programming/JS/React/escalafe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\n/*\nconst Table = ({data}) = (\n  <table>\n    {data.map(row => {\n      <TableRow row={row} />\n    })}\n  </table>\n);\n//*/\n\nclass EscalaFE extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      escala: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://homestead.local/escala').then(response => response.json()).then(escala => this.setState({\n      escala\n    })).catch(e => {\n      console.log(e);\n      return e;\n    });\n  }\n\n  renderTableRow() {\n    return this.state.escala.map((item, i) => {\n      const user = item.user;\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        key: row.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, row.user), React.createElement(\"td\", {\n        key: row.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, row.email), React.createElement(\"td\", {\n        key: row.company,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, row.company), React.createElement(\"td\", {\n        key: row.escalas,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, row.escalas), React.createElement(\"td\", {\n        key: row.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, row.status));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"OI\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Usu\\xE1rios\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Usu\\xE1rio\"))), \"//\", React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.renderTableRow())));\n  }\n\n} //ReactDOM.render(<App />, document.getElementById('root'));\n\n\nReactDOM.render(React.createElement(EscalaFE, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/felipe/Documents/Personal/Programming/JS/React/escalafe/src/index.js"],"names":["React","ReactDOM","serviceWorker","ReactTable","EscalaFE","Component","constructor","props","state","escala","componentDidMount","fetch","then","response","json","setState","catch","e","console","log","renderTableRow","map","item","i","user","row","email","company","escalas","status","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;AAEA;;;;;;;;;;AAUA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAsC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE;AADI,KAAb;AAGA;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESH,MAAM,IAAI,KAAKM,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd,CAFnB,EAGIO,KAHJ,CAGUC,CAAC,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,aAAOA,CAAP;AACD,KAND;AAOD;;AAEDG,EAAAA,cAAc,GAAE;AACjB,WAAO,KAAKZ,KAAL,CAAWC,MAAX,CAAkBY,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAAA,YAClCC,IADkC,GAC1BF,IAD0B,CAClCE,IADkC;AAEzC,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,GAAG,EAAEC,GAAG,CAACD,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBC,GAAG,CAACD,IAAxB,CADJ,EAEI;AAAI,QAAA,GAAG,EAAEC,GAAG,CAACC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBD,GAAG,CAACC,KAAzB,CAFJ,EAGI;AAAI,QAAA,GAAG,EAAED,GAAG,CAACE,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBF,GAAG,CAACE,OAA3B,CAHJ,EAII;AAAI,QAAA,GAAG,EAAEF,GAAG,CAACG,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBH,GAAG,CAACG,OAA3B,CAJJ,EAKI;AAAI,QAAA,GAAG,EAAEH,GAAG,CAACI,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsBJ,GAAG,CAACI,MAA1B,CALJ,CADD;AASA,KAXM,CAAP;AAYA;;AAECC,EAAAA,MAAM,GAAE;AACP,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADD,CADD,QAMG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,KAAKV,cAAL,EAAR,CANH,CAHA,CADD;AAcA;;AAjDkC,C,CAqDtC;;;AACAnB,QAAQ,CAAC6B,MAAT,CAAgB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA8BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA9B,E,CAEA;AACA;AACA;;AACA9B,aAAa,CAAC+B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\"\n\n/*\nconst Table = ({data}) = (\n  <table>\n    {data.map(row => {\n      <TableRow row={row} />\n    })}\n  </table>\n);\n//*/\n\nclass EscalaFE extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tescala: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n    \tfetch('http://homestead.local/escala')\n      \t\t.then(response => response.json())\n      \t\t.then(escala => this.setState({ escala }))\n      \t\t.catch(e => {\n    \t\t\tconsole.log(e);\n    \t\t\treturn e;\n  \t\t\t}); \t\t\n  \t}\n\n  \trenderTableRow(){\n\t\treturn this.state.escala.map((item, i) => {\n\t\t\tconst {user} = item\n\t\t\treturn(\n\t\t\t\t<tr>\n\t\t\t\t    <td key={row.user}>{row.user}</td>\n\t\t\t\t    <td key={row.email}>{row.email}</td>\n\t\t\t\t    <td key={row.company}>{row.company}</td>\n\t\t\t\t    <td key={row.escalas}>{row.escalas}</td>\n\t\t\t\t    <td key={row.status}>{row.status}</td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t})\n\t}\n\n  \trender(){\n  \t\treturn(\n  \t\t\t<div>\n  \t\t\t<h1>OI</h1>\n  \t\t\t<h3>Usuários</h3>\n  \t\t\t<table>\n\t  \t\t\t<thead>\n\t\t  \t\t\t<tr>\n\t\t  \t\t\t\t<td>Usuário</td>\n\t\t  \t\t\t</tr>\n\t  \t\t\t</thead>\n\t  \t\t\t//<tbody>{this.renderTableRow()}</tbody>\n  \t\t\t</table>\n  \t\t\t</div>\n  \t\t);\n  \t}\n\n}\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<EscalaFE />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}