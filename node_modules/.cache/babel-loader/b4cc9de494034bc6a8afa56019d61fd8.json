{"ast":null,"code":"var _jsxFileName = \"/Users/felipe/Documents/Personal/Programming/JS/React/escalafe/src/components/EscalaList.js\";\nimport React from 'react';\nimport './styles/EscalaList.css';\n\nclass EscalaList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      escala: [],\n      currentPage: 1,\n      rowsPerPage: 2\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  checkStatus(status) {\n    if (status === 'ativo') {\n      return React.createElement(\"td\", {\n        className: \"hiddenCols\",\n        style: {\n          color: '#008000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"greenCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), \"ativo\");\n    } else {\n      return React.createElement(\"td\", {\n        className: \"hiddenCols\",\n        style: {\n          color: '#FF0000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"redCircle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), \"inativo\");\n    }\n  }\n\n  removeUser(item, e) {\n    if (this.props.all.length > 0) {\n      for (let k = 0; k < this.props.all.length; k++) {\n        if (this.props.all[k].user === item.user) {\n          this.props.all[k].removed = 'true';\n        }\n      }\n\n      const escalaCopy = this.state.escala.filter(item => item.removed === 'true');\n      this.setState({\n        escala: escalaCopy\n      });\n      console.log(item.user + \" foi removido(a)!\");\n    }\n  }\n\n  handleClick(e) {\n    this.setState({\n      currentPage: Number(e.target.id)\n    });\n  }\n\n  renderTableRows() {\n    let escala = this.props.escala;\n\n    if (!this.props.escala.length > 0) {\n      escala = this.props.all;\n    }\n\n    escala = escala.filter(item => item.removed === 'false'); //\n\n    const indexOfLastItem = this.state.currentPage * this.state.rowsPerPage;\n    const indexOfFirstItem = indexOfLastItem - this.state.rowsPerPage;\n    return escala.map((item, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, item.user), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, item.email), React.createElement(\"td\", {\n        className: \"hiddenCols\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, item.company), React.createElement(\"td\", {\n        className: \"hiddenCols\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, item.escalas), this.checkStatus(item.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Excluir\",\n        onClick: e => this.removeUser(item, e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })));\n    }); //\n\n    const page = [];\n\n    for (let i = 1; i <= Math.ceil(escala.length / this.state.rowsPerPage); i++) {\n      page.push(i);\n    } //\n\n\n    const renderPageNum = page.map(num => {\n      return React.createElement(\"li\", {\n        key: num,\n        onClick: this.handleClickPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, num);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      id: \"escalaTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"USU\\xC1RIO\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"E-MAIL\"), React.createElement(\"th\", {\n      className: \"hiddenCols\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"COMPANY\"), React.createElement(\"th\", {\n      className: \"hiddenCols\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"ESCALAS\"), React.createElement(\"th\", {\n      className: \"hiddenCols\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"STATUS\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.renderTableRows())));\n  }\n\n}\n\nexport default EscalaList;","map":{"version":3,"sources":["/Users/felipe/Documents/Personal/Programming/JS/React/escalafe/src/components/EscalaList.js"],"names":["React","EscalaList","Component","constructor","props","state","escala","currentPage","rowsPerPage","handleClick","bind","checkStatus","status","color","removeUser","item","e","all","length","k","user","removed","escalaCopy","filter","setState","console","log","Number","target","id","renderTableRows","indexOfLastItem","indexOfFirstItem","map","i","email","company","escalas","page","Math","ceil","push","renderPageNum","num","handleClickPage","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './styles/EscalaList.css';\n\nclass EscalaList extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tescala: [],\n\t\t\tcurrentPage: 1,\n\t        rowsPerPage: 2\n\t\t};\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\t\n\n\tcheckStatus(status){\n\t\tif(status === 'ativo'){\n\t\t\treturn (\n\t\t\t\t<td className=\"hiddenCols\" style={{color: '#008000'}}>\n\t\t\t\t<div id=\"greenCircle\"></div>\n\t\t\t\tativo</td>\n\t\t\t)\n\t\t}else{\n\t\t\treturn (\n\t\t\t\t<td className=\"hiddenCols\" style={{color: '#FF0000'}}>\n\t\t\t\t<div id=\"redCircle\"></div>\n\t\t\t    inativo</td>\n\t\t\t)\n\t\t}\n\t}\n\n\tremoveUser(item, e){\n\t\tif(this.props.all.length > 0){\n\t\t\tfor(let k = 0; k < this.props.all.length; k++){\n\t\t\t\tif(this.props.all[k].user === item.user){ \n\t\t\t\t\tthis.props.all[k].removed = 'true';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst escalaCopy = this.state.escala.filter(\n\t\t\t\t(item) => item.removed === 'true');\n\t\t\tthis.setState({ escala: escalaCopy });\n\t\t\tconsole.log(item.user + \" foi removido(a)!\");\n\t\t}\n\t\t\n\t}\n\n\thandleClick(e) {\n        this.setState({\n          currentPage: Number(e.target.id)\n        });\n      }\n\n\trenderTableRows(){\n\t\tlet escala = this.props.escala;\n\t\tif(!this.props.escala.length > 0){\n\t\t\tescala = this.props.all;\n\t\t}\n\n\t\tescala = escala.filter( (item) => \n\t\t\titem.removed === 'false'\n\t\t)\n\n\t\t//\n\t\tconst indexOfLastItem = this.state.currentPage * this.state.rowsPerPage;\n\t\tconst indexOfFirstItem = indexOfLastItem - this.state.rowsPerPage;\n\n\t\treturn escala.map((item, i) => {\n\t\t\treturn(\n\t\t\t\t<tr key={i}>\n\t\t\t\t    <td>{item.user}</td>\n\t\t\t\t    <td>{item.email}</td>\n\t\t\t\t    <td className=\"hiddenCols\">{item.company}</td>\n\t\t\t\t    <td className=\"hiddenCols\">{item.escalas}</td>\n\t\t\t\t    {this.checkStatus(item.status)}\n\t\t\t\t    <td><input type=\"button\" value=\"Excluir\" onClick={(e) => this.removeUser(item, e)}/></td>\n\t\t\t\t</tr>\n\t\t\t)\n\t\t})\n\n\t\t//\n\t\tconst page = [];\n\t\tfor(let i = 1; i <= Math.ceil(escala.length / this.state.rowsPerPage); i++){\n\t\t\tpage.push(i);\n\t\t}\n\n\t\t//\n\t\tconst renderPageNum = page.map( (num) => {\n\t\t\treturn (\n\t\t\t\t<li key={num} onClick={this.handleClickPage} >{num}</li>\n\t\t\t)\n\t\t})\n\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t<table id=\"escalaTable\">\n\t  \t\t\t<thead>\n\t\t  \t\t\t<tr>\n\t\t  \t\t\t\t<th>USUÁRIO</th>\n\t\t  \t\t\t\t<th>E-MAIL</th>\n\t\t  \t\t\t\t<th className=\"hiddenCols\">COMPANY</th>\n\t\t  \t\t\t\t<th className=\"hiddenCols\">ESCALAS</th>\n\t\t  \t\t\t\t<th className=\"hiddenCols\">STATUS</th>\n\t\t  \t\t\t\t<th></th>\n\t\t  \t\t\t</tr>\n\t  \t\t\t</thead>\n\t  \t\t\t<tbody>{this.renderTableRows()}</tbody>\n  \t\t\t</table>\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default EscalaList;"]},"metadata":{},"sourceType":"module"}